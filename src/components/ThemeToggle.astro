---
import MoonIcon from "./icons/MoonIcon.astro";
import SunIcon from "./icons/SunIcon.astro";
import SystemIcon from "./icons/SystemIcon.astro";
---

<div id="theme-toggle-main" class="relative">
  <button
    id="theme-toggle-btn"
    class="hover:cursor-pointer hover:scale-105 transition flex items-center"
  >
    <SunIcon id="light" class="icon size-5 hidden" />
    <MoonIcon id="dark" class="icon size-5 hidden" />
    <SystemIcon id="system" class="icon size-5 " />
  </button>

  <div id="toggle-options" class="relative overflow-hidden">
    <ul
      id="theme-togle-container"
      class="absolute top-5 right-0 text-black overflow-hidden flex flex-col pl-2 items-start scale-70 min-w-[100px] text-xs py-4 gap-y-2 rounded-md border border-gray-100 bg-white/90 dark:bg-gray-900/90 dark:border-gray-500/20 shadow-[0_3px_10px_rgb(0,0,0,0.2)] backdrop-blur-md open transition-all duration-300 ease-in-out opacity-20"
    >
      <li
        class="option flex justify-center items-center gap-x-2 font-semibold hover:scale-105 cursor-pointer transition"
      >
        Light
      </li>
      <li
        class="option flex justify-center items-center gap-x-2 font-semibold hover:scale-105 cursor-pointer transition"
      >
        Dark
      </li>
      <li
        class="option flex justify-center font-semibold items-center gap-x-2 hover:scale-105 cursor-pointer transition"
      >
        System
      </li>
    </ul>
  </div>
</div>

<!--
  1- Poner una palabra para clicar
  2- hacer Una grid o una lista con absolute donde se vean los tres emoticonos
  3- Hacer en el script que al clickar la lista se vea o se deje de ver aÃ±adiendole hidden o grid dependiendo si esta abierta

  4- Guardar la opcion escogida en localStorage
  5- Cargar el el emoticono donde clicko dependiendo de la opcion guardada o esogida
  6- Cambiar realmente el color del tema XD

-->

<script is:inline>
  //1-) Miro la preferencia del tema, si tengo algo en localStorage lo usa, si no lo usa el matchMedia
  const changeButton = document.getElementById("theme-toggle-btn");
  const toggleContainer = document.getElementById("theme-togle-container");
  const toggleMenu = document.getElementById("toggle-options");

  //1-) Miro la preferencia que tengo guardada en localStorage
  const getThemePreference = () => {
    if (typeof localStorage !== "undefined") {
      return localStorage.getItem("theme") ?? "system";
    }

    return window.matchMedia("(prefers-color-scheme: dark)").matches
      ? "dark"
      : "light";
  };

  const applyPreference = () => {
    const icons = document.querySelectorAll(".icon");
    icons.forEach((icon) => {
      icon.id === getThemePreference()
        ? icon.classList.remove("hidden")
        : icon.classList.add("hidden");
    });

    if(getThemePreference() === "dark"){
      document.documentElement.classList.add("dark");
    } else if(getThemePreference() === "light"){
      document.documentElement.classList.remove("dark");
    }  else{
      window.matchMedia('prefers-color-scheme: dark').matches ? document.documentElement.classList.add("dark") : document.documentElement.classList.remove("dark");
    }  

  }

  //2-) Cambio el texto del boton segun mi preferencia
  document.addEventListener("DOMContentLoaded", function () {
    const options = document.querySelectorAll(".option");

    applyPreference()


    //3-) Saco el container de la lista de themas
    changeButton.addEventListener("click", (e) => {
      e.stopPropagation();

      toggleContainer.classList.toggle("scale-70");
      toggleContainer.classList.toggle("opacity-20");
      toggleMenu.classList.toggle("overflow-hidden");

    });

    //4-) Cambio el thema Guardar la opcion escogida en localStorage
    options.forEach((option) => {
      option.addEventListener("click", (e) => {
        e.stopPropagation();
        localStorage.setItem("theme", e.target.innerText.toLowerCase().trim());

        applyPreference()

      });
    });
  });
</script>
