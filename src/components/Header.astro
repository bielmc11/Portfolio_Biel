---

const navItems = [
  {
    title: "Experiencia",
    href: "#experiencia",
    label: "experiencia",
  },
  {
    title: "Projectos",
    href: "#projectos",
    label: "projectos",
  },
  {
    title: "Sobre mí",
    href: "#sobre-mi",
    label: "sobre-mi",
  },
  {
    title: "Contacto",
    href: "#contacto",
    label: "contacto",
  },
];
---

<header
  id="header"
  class="fixed text-sm z-10 flex mt-2 justify-center py-2 w-auto px-2 sm:px-0 mx-auto rounded-full"
>
  <nav class="flex justify-center flex-2 px-2 sm:px-6 py-1">
    <!-- <ul class="flex gap-x-6 sm:gap-x-4 justify-center opacity-80">
      <li><a aria-label="sobre-mi" href="#sobre-mi">Sobre mí</a></li>
      <li><a aria-label="experiencia" href="#experiencia">Experiencia</a></li>
      <li><a aria-label="projectos" href="#projectos">Projectos</a></li>
      <li><a aria-label="contacto" href="#contacto">Contaco</a></li>
    </ul> -->

    <ul class="flex gap-x-6 sm:gap-x-4 justify-center opacity-80">
      {
        navItems.map((item) => (
          <li>
            <a href={item.href} aria-label={item.label}>
              {item.title}
            </a>
          </li>
        ))
      }
    </ul>
  </nav>
</header>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const navItems = document.querySelectorAll("header nav ul li a");
    const sections = Array.from(document.querySelectorAll("section"));
    sections.pop();

    const callback = (entries: any[]) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          navItems.forEach((items) => {
            if (items.getAttribute("aria-label") == entry.target.id) {
              items.classList.add("text-blue-500");
            } else {
              items.classList.remove("text-blue-500");
            }
          });
        }
      });
    };

    const observer = new IntersectionObserver(callback, {
      root: null,
      rootMargin: "0px",
      threshold: 0.4,
    });

    sections.forEach((section) => observer.observe(section));

    //CLEAN UP
    document.onvisibilitychange = () => {
      if (document.visibilityState === "hidden") {
        observer.disconnect();
      } else {
        sections.forEach((section) => observer.observe(section));
      }
    };

   
  });

  
</script>

<style>
  nav {
    animation: nav-shadown 1s linear both;
    animation-timeline: scroll();
    animation-range: 0 100px;
    border-radius: 100px;
  }

  nav {
    /* @apply dark:bg-gray-800/90 bg-white/50;
    background-color: white; */
    background-color: transparent;
  }

  @keyframes nav-shadown {
    0% {
      /* @apply dark:bg-gray-800/0 bg-white/0; */
      /*  background-color: white */
      background-color: transparent;
    }
    to {
      /* @apply shadow-lg ring-1 backdrop-blur ring-white/10; */

      -webkit-box-shadow: 0px 0px 52px -11px rgba(0, 0, 0, 0.75);
      -moz-box-shadow: 0px 0px 52px -11px rgba(0, 0, 0, 0.75);
      box-shadow: 0px 0px 52px -11px rgba(0, 0, 0, 0.75);

      background-color: #1e2837;

      /* Inner ring */
      -webkit-box-shadow: inset 0px 0px 0px 1px rgba(255, 255, 255, 0.1);
      -moz-box-shadow: inset 0px 0px 0px 1px rgba(255, 255, 255, 0.1);
      box-shadow: inset 0px 0px 0px 1px rgba(255, 255, 255, 0.1);
    }
  }
</style>
